apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "73.2.0" # Latest chart version
    helm:
      releaseName: kube-prometheus-stack
      values: |
        # Global settings
        global:
          rbac:
            create: true
            createAggregateClusterRoles: false

        # Prometheus configuration
        prometheus:
          enabled: true
          prometheusSpec:
            replicas: 1
            retention: "30d"
            retentionSize: "8GB"
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-path
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
            resources:
              requests:
                memory: "512Mi"
                cpu: "200m"
              limits:
                memory: "2Gi"
                cpu: "1000m"
            # Allow discovery of ServiceMonitors in all namespaces
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            scrapeConfigSelectorNilUsesHelmValues: false

        # Alertmanager configuration
        alertmanager:
          enabled: true
          alertmanagerSpec:
            replicas: 1
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: local-path
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 2Gi
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"

        # Grafana configuration
        grafana:
          enabled: true
          adminPassword: "admin123"  # TODO: Use proper secret management in production
          defaultDashboardsTimezone: "UTC"
          serviceMonitor:
            enabled: true
          ingress:
            enabled: true
            ingressClassName: "traefik"
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
              traefik.ingress.kubernetes.io/router.tls: "true"
            hosts:
              - grafana.geonhyuk.com
            tls:
              - secretName: grafana-tls
                hosts:
                  - grafana.geonhyuk.com
          persistence:
            enabled: true
            storageClassName: local-path
            size: 1Gi
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          sidecar:
            dashboards:
              enabled: true
              searchNamespace: ALL
            datasources:
              enabled: true
              searchNamespace: ALL

        # Node Exporter
        nodeExporter:
          enabled: true

        # Prometheus Operator
        prometheusOperator:
          enabled: true
          # Temporarily disable admission controller to avoid RBAC conflicts
          admissionWebhooks:
            enabled: false
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"

        # Kube State Metrics
        kubeStateMetrics:
          enabled: true

        # Default rules
        defaultRules:
          create: true
          rules:
            alertmanager: true
            etcd: true
            configReloaders: true
            general: true
            k8s: true
            kubeApiserverAvailability: true
            kubeApiserverBurnrate: true
            kubeApiserverHistogram: true
            kubeApiserverSlos: true
            kubeControllerManager: true
            kubelet: true
            kubeProxy: true
            kubePrometheusGeneral: true
            kubePrometheusNodeRecording: true
            kubernetesApps: true
            kubernetesResources: true
            kubernetesStorage: true
            kubernetesSystem: true
            kubeScheduler: true
            kubeStateMetrics: true
            network: true
            node: true
            nodeExporterAlerting: true
            nodeExporterRecording: true
            prometheus: true
            prometheusOperator: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Replace=true # Useful for CRDs
  revisionHistoryLimit: 10
