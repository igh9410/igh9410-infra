---
# Service Account for the CronJob
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-restarter
  namespace: argocd
---
# Role with permissions to restart deployments
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: deployment-restarter
  namespace: argocd
rules:
- apiGroups: [ "apps" ]
  resources: [ "deployments" ]
  verbs: [ "get", "patch" ]
---
# RoleBinding to bind the Role to the ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-restarter-binding
  namespace: argocd
subjects:
- kind: ServiceAccount
  name: argocd-restarter
  namespace: argocd
roleRef:
  kind: Role
  name: deployment-restarter
  apiGroup: rbac.authorization.k8s.io
---
# CronJob to restart the ArgoCD Image Updater
apiVersion: batch/v1
kind: CronJob
metadata:
  name: argocd-image-updater-restarter
  namespace: argocd
spec:
  schedule: "*/50 * * * *" # Run every 50 minutes
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: argocd-restarter
          containers:
          - name: kubectl
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - |
              kubectl patch deployment argocd-image-updater -n argocd -p '{"spec":{"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}}}}}'
              echo "ArgoCD Image Updater restarted at $(date)"
          restartPolicy: OnFailure
