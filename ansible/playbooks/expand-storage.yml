---
- name: Expand LVM logical volume and filesystem to use all free space
  hosts: k3s_cluster
  become: true
  gather_facts: true
  
  vars:
    # Default LVM configuration for Ubuntu VMs
    volume_group: ubuntu-vg
    logical_volume: ubuntu-lv
    
  pre_tasks:
    - name: Ensure community.general collection is available
      ansible.builtin.debug:
        msg: "Make sure to run: ansible-galaxy collection install community.general"
    
    - name: Check if physical volume exists
      ansible.builtin.command: pvs --noheadings -o pv_name
      register: pv_list
      changed_when: false
      failed_when: false
      
    - name: Get physical volume device
      ansible.builtin.shell: |
        pvs --noheadings -o pv_name | grep -E '/dev/[sv]d[a-z][0-9]+' | head -1 | xargs
      register: pv_device
      changed_when: false
      failed_when: pv_device.stdout == ""
      
    - name: Display current storage information
      ansible.builtin.debug:
        msg: |
          Host: {{ inventory_hostname }}
          Physical Volume: {{ pv_device.stdout }}
          Volume Group: {{ volume_group }}
          Logical Volume: {{ logical_volume }}

  tasks:
    - name: Check current disk usage
      ansible.builtin.command: df -h /
      register: df_before
      changed_when: false
      
    - name: Display current disk usage
      ansible.builtin.debug:
        msg: "Current root filesystem usage: {{ df_before.stdout_lines[1] }}"
    
    - name: Check current LVM status
      ansible.builtin.command: "{{ item }}"
      register: lvm_status
      changed_when: false
      loop:
        - "pvs {{ pv_device.stdout }}"
        - "vgs {{ volume_group }}"
        - "lvs {{ volume_group }}/{{ logical_volume }}"
      
    - name: Display current LVM status
      ansible.builtin.debug:
        msg: "{{ item.stdout_lines }}"
      loop: "{{ lvm_status.results }}"
      loop_control:
        label: "{{ item.cmd }}"
    
    - name: Resize physical volume to use all available space
      ansible.builtin.command: "pvresize {{ pv_device.stdout }}"
      register: pvresize_result
      changed_when: "'Physical volume' in pvresize_result.stdout and 'resized' in pvresize_result.stdout"
      failed_when: pvresize_result.rc != 0 and 'already the correct size' not in pvresize_result.stderr
      
    - name: Extend logical volume to use all free space in volume group
      community.general.lvol:
        vg: "{{ volume_group }}"
        lv: "{{ logical_volume }}"
        size: +100%FREE
        resizefs: true
      register: lvextend_result
      
    - name: Wait a moment for filesystem to be fully resized
      ansible.builtin.pause:
        seconds: 2
        
    - name: Check final disk usage
      ansible.builtin.command: df -h /
      register: df_after
      changed_when: false
      
    - name: Display final disk usage
      ansible.builtin.debug:
        msg: |
          Storage expansion completed for {{ inventory_hostname }}:
          Before: {{ df_before.stdout_lines[1] }}
          After:  {{ df_after.stdout_lines[1] }}
          
    - name: Verify storage expansion
      ansible.builtin.shell: |
        df -h / | tail -1 | awk '{print "Available space: " $4 ", Usage: " $5}'
      register: final_status
      changed_when: false
      
    - name: Final status
      ansible.builtin.debug:
        msg: "{{ final_status.stdout }}"

  post_tasks:
    - name: Summary of changes
      ansible.builtin.debug:
        msg: |
          Storage expansion completed successfully on {{ inventory_hostname }}
          Physical volume resized: {{ pvresize_result.changed }}
          Logical volume extended: {{ lvextend_result.changed }}
          
  handlers:
    - name: Reboot if needed
      ansible.builtin.reboot:
        msg: "Rebooting after storage expansion"
        pre_reboot_delay: 5
      when: ansible_reboot_required is defined and ansible_reboot_required 